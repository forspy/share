#pragma once
#ifndef test//这样就可以避免重复调用头文件，和#pragma once的效果一样
#define test

//声明部分
//声明部分
/*
./当前文件夹
../上一级文件夹
include" "表示从当前文件夹搜索头文件
./test/test.h  等价于 test/test.h
工程下右键属性在c/c++一栏常规可以看到附加目录，添加附加目录下的头文件就可以调用其他头文件
<>系统或第三方
""自己开发的头文件


不要再头文件里定义全局变量，会重复定义
但是定义只能出现在一处。也就是说，不管是int a;还是int a=0;都只能出现一次，而那个extern int a可以出现很多次。

因为extern 修饰的变量作用于该文件，extern的原理很简单，就是告诉编译器：“你现在编译的文件中，
有一个标识符虽然没有在本文件中定义，但是它是在别的文件中定义的全局变量，你要放行！”
比如：
//A.cpp
extern int i;
int main()
{
i=100;//试图使用B中定义的全局变量
}
//B.cpp
int i;
区别于static 将变量声明为静态全局变量，只能在模块内部使用，如果声明了static后，尽管主文件中声明了extern也调用不到
*/
#endif
